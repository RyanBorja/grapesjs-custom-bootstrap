{"version":3,"sources":["webpack://grapesjs-custom-bootstrap/webpack/universalModuleDefinition","webpack://grapesjs-custom-bootstrap/webpack/bootstrap","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/objectSpread.js","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://grapesjs-custom-bootstrap/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://grapesjs-custom-bootstrap/./src/components/grid_system/grid_system_components/column.js","webpack://grapesjs-custom-bootstrap/./src/components/grid_system/grid_system_components/container.js","webpack://grapesjs-custom-bootstrap/./src/components/grid_system/grid_system_components/row.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/heading.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/paragraph.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/abbreviation.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/address.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/bockquote.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/list.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/typography_components/descriptionlist.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/table.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/tabledata.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/table_responsive.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/tablerow.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/tablehead.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/tables_components/tablefoot.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/forms_components/form.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/forms_components/form_group.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/forms_components/label.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/forms_components/input.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/forms_components/textarea.js","webpack://grapesjs-custom-bootstrap/./src/components/index.js","webpack://grapesjs-custom-bootstrap/./src/components/grid_system/index.js","webpack://grapesjs-custom-bootstrap/./src/components/typography/index.js","webpack://grapesjs-custom-bootstrap/./src/components/tables/index.js","webpack://grapesjs-custom-bootstrap/./src/components/forms/index.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/row.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_3_9.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_9_3.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_4_8.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_8_4.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_4_4_4.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/grid_system_blocks/column_3_6_3.js","webpack://grapesjs-custom-bootstrap/./src/blocks/grid_system/index.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/heading.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/paragraph.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/address.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/blockquote.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/list.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/typography_blocks/descriptionlist.js","webpack://grapesjs-custom-bootstrap/./src/blocks/typography/index.js","webpack://grapesjs-custom-bootstrap/./src/blocks/forms/forms_blocks/form.js","webpack://grapesjs-custom-bootstrap/./src/blocks/forms/index.js","webpack://grapesjs-custom-bootstrap/./src/blocks/basics/basics_blocks/basic_link.js","webpack://grapesjs-custom-bootstrap/./src/blocks/basics/index.js","webpack://grapesjs-custom-bootstrap/./src/panels/index.js","webpack://grapesjs-custom-bootstrap/./src/panels/functions/openImport.js","webpack://grapesjs-custom-bootstrap/./src/panels/functions/aboutModal.js","webpack://grapesjs-custom-bootstrap/./src/traits/index.js","webpack://grapesjs-custom-bootstrap/./src/traits/selectClass/index.js","webpack://grapesjs-custom-bootstrap/./src/constants/bootstrap3/bootstrap3.js","webpack://grapesjs-custom-bootstrap/./src/constants/index.js","webpack://grapesjs-custom-bootstrap/./src/index.js","webpack://grapesjs-custom-bootstrap/./src/blocks/index.js","webpack://grapesjs-custom-bootstrap/./src/devices/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","target","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","obj","configurable","writable","Array","isArray","arr2","iter","iterator","toString","from","TypeError","grid_system_components_column","config","columnComponentId","constants","components","gridsystem","column","id","cols","type","methods","isComponent","el","className","match","extend","model","defaults","draggable","droppable","editable","classes","traits","options","toConsumableArray_default","map","label","extendView","view","grid_system_components_container","containerComponentId","container","classList","contains","row","rowComponentId","heading","headingComponent","typography","headingTypes","tags","tagName","includes","changeProp","paragraph","paragraphComponent","bootstrap_class","abbreviation","abbreviationComponent","attributes","title","address","addressComponent","bockquote","blockquoteComponent","blockquote","list","listComponent","listTypes","valueTrue","valueFalse","descriptionlist","descriptionlistComponent","tables_components_table","table","tables","props","element","tableclass","index","split","updated","prevValue","tmp2","values","x","unshift","this","setClass","tables_components_tabledata","tabledata","result","tag","toLowerCase","contextClass","table_responsive","wrapper","tables_components_tablerow","tablerow","tablehead","tablefoot","forms_components_form","form","forms","formclass","forms_components_form_group","form_group","validation_state_classes","console","log","models","getClasses","form_label","for","input","form_control","placeholder","types","forms_components_textarea","textarea","palceholder","editor","domc","DomComponents","defaultType","getType","grid_system_components","typography_components","tables_components","forms_components","component","addType","grid_system_blocks_row","blockId","blocks","_config$constants$com","_config$constants$com2","opts","category","class","content","grid_system_blocks_column","column_3_9","column_9_3","column_4_8","column_8_4","column_4_4_4","column_3_6_3","blocks_grid_system","typography_blocks_heading","typography_blocks_paragraph","typography_blocks_address","typography_blocks_list","typography_blocks_descriptionlist","blocks_typography","forms_blocks_form","blocks_forms","basic_link","basics","panels","undefined","panelManager","Panels","command","e","runCommand","active","btn","addButton","commands","Commands","add","pfx","getConfig","modal","Modal","codeViewer","CodeManager","getViewer","clone","document","createElement","importLabel","importCnt","getHtml","getCss","viewerEditor","btnImp","innerHTML","onclick","setComponents","getValue","trim","close","set","objectSpread_default","codeName","theme","readOnly","inmportViewerOptions","importViewerOptions","run","_this","txtarea","labelEl","appendChild","init","setTitle","setContent","cnt","open","getModel","once","stopCommand","refresh","stop","openImport","confirm","aboutModal","TraitManager","events","change","onValueChange","opt","classesN","j","removeClass","valueN","addClass","em","trigger","getInputEl","inputEl","targetViewEl","option","text","setAttribute","append","selectClass","bootStrap3","mediaQueries","bslabel","breakpoint","containers","columns","headings","bodycopy","alignment","trasnformation","abbrevaitions","blockquotes","lists","descriptionLists","code","inline","userInput","basicBlock","variables","sampleOutput","buttons","colorClasses","sizeClasses","images","helperClasses","responsiveUtilities","contextClasses","feedback","form_horizontal_sizing_classes","static_form_control","rows","select","multiple","form_radio_checkbox","label_classes","form_help_block","__webpack_exports__","addBasicStyle","addComponents","on","at","loadComponents","bm","BlockManager","grid_system","collection","block","loadBlocks","deviceManager","DeviceManager","devices","width","device","setDevice","cmd","addPanel","visible"],"mappings":"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","file":"dist/grapesjs-custom-bootstrap.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-custom-bootstrap\"] = factory();\n\telse\n\t\troot[\"grapesjs-custom-bootstrap\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","export default (config) => {\r\n    const columnComponentId = config.constants.components.gridsystem.column.id;\r\n    let cols = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\n    let column = {\r\n      type: columnComponentId,\r\n      methods: {\r\n        isComponent: (el) => {\r\n          if (el && el.className && el.className.match(/col-(xs|sm|md|lg)-\\d+/)) {\r\n            return { type: columnComponentId }\r\n          }\r\n        },\r\n        extend: 'default',\r\n        model: {\r\n          defaults: {\r\n            name: 'Column',\r\n            draggable: '.row',\r\n            droppable: true,\r\n            editable: true,\r\n            classes: ['col-xs-12'],\r\n            traits: [\r\n              {\r\n              type: 'select-class',\r\n              options: [\r\n                {value: '', name: 'None'},\r\n                ...cols.map((i) => ({ value: `col-xs-${i}`, name: `${i}/12` }))\r\n              ],\r\n              label: 'XS size'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-sm-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'SM size'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-md-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'MD size'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-lg-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'LG size'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-xs-offset-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'XS offset'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-sm-offset-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'SM offset'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-md-offset-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'MD offset'\r\n              }, {\r\n                type: 'select-class',\r\n                options: [\r\n                  {value: '', name: 'None'},\r\n                  ...cols.map((i) => ({ value: `col-lg-offset-${i}`, name: `${i}/12` }))\r\n                ],\r\n                label: 'LG offset'\r\n              }]\r\n          }\r\n        },\r\n        extendView: 'default',\r\n        view: {},\r\n      }\r\n    };\r\n\r\n    return column;\r\n}","export default (config) => {\r\n    const containerComponentId = config.constants.components.gridsystem.container.id;\r\n    let container = {\r\n        type: containerComponentId,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.classList && (el.classList.contains('container') || el.classList.contains('container-fluid'))) {\r\n                    return { type: containerComponentId }\r\n                }\r\n            },\r\n            extend: 'default',\r\n            model: {\r\n                defaults: {\r\n                    name: 'Container',\r\n                    draggable: ':not(.container), :not(.container-fluid)',\r\n                    droppable: '.row',\r\n                    classes: ['container'],\r\n                    traits:[{\r\n                        type: 'select',\r\n                        label: 'Type',\r\n                        name: 'class',\r\n                        options: [\r\n                            { id: 'container', name: 'Fixed' },\r\n                            { id: 'container-fluid', name: 'Fluid' }\r\n                        ]\r\n                    }]\r\n                },\r\n            },\r\n            extendView: 'default',\r\n            view: {},\r\n        }\r\n    }\r\n    return container;\r\n}","export default (config) => {\r\n    const rowComponentId = config.constants.components.gridsystem.row.id;\r\n    let row = {\r\n        type: rowComponentId,\r\n        methods: {\r\n            isComponent : (el) => {\r\n                if (el && el.classList && el.classList.contains('row')) {\r\n                    return { type: rowComponentId }\r\n                }\r\n            },\r\n            extend: 'default',\r\n            model: {\r\n                defaults: {\r\n                    name: 'Row',\r\n                    draggable: '.container, .container-fluid, [class|=\"col\"]',\r\n                    droppable: '[class|=\"col\"]',\r\n                    classes: ['row'],\r\n                    traits: [],\r\n                },\r\n            },\r\n            extendView: 'default',\r\n            view: {},\r\n        }\r\n    };\r\n    return row;\r\n}","export default (config) => {\r\n    const headingComponent = config.constants.components.typography.heading;\r\n    const headingTypes = headingComponent.tags;\r\n    let heading = {\r\n        type: headingComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && headingTypes.includes(el.tagName)) {\r\n                    return { type: headingComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: 'H1',\r\n                    name: 'Heading',\r\n                    draggable: '[class|=\"col\"]',\r\n                    traits:[ \r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Heading Type',\r\n                            name: 'tagName',\r\n                            changeProp: 1,\r\n                            options: headingTypes.map(type => { return {id: type, name: type} } )\r\n                        },\r\n                    ]\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return heading;\r\n}","export default (config) => {\r\n    const paragraphComponent = config.constants.components.typography.paragraph;\r\n    let paragraph = {\r\n        type: paragraphComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && (el.tagName === 'P' || el.tagName === 'p' )) {\r\n                    return { type: paragraphComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: 'p',\r\n                    name: 'Text',\r\n                    draggable: '[class|=\"col\"]',\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Helper Classes',\r\n                            name: 'class',\r\n                            options: paragraphComponent.classes.map( bootstrap_class => { return {id: bootstrap_class, name: bootstrap_class} } )\r\n                    }]\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return paragraph;\r\n}","export default (config) => {\r\n    const abbreviationComponent = config.constants.components.typography.abbreviation;\r\n    let abbreviation = {\r\n        type: abbreviationComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && el.tagName === abbreviationComponent.tags) {\r\n                    return { type: abbreviationComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: abbreviationComponent.tags,\r\n                    name: 'Abbreviation',\r\n                    draggable: '[class|=\"col\"]',\r\n                    attributes: { title: 'HyperText Markup Language'},\r\n                    classes: ['initialism'],\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Initialism',\r\n                            name: 'class',\r\n                            options: abbreviationComponent.classes.map( bootstrap_class => { return {id: bootstrap_class, name: bootstrap_class} } )\r\n                    }]\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return abbreviation;\r\n}","export default (config) => {\r\n    const addressComponent = config.constants.components.typography.address;\r\n    let address = {\r\n        type: addressComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && (el.tagName === addressComponent.tags )) {\r\n                    return { type: addressComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: addressComponent.tags,\r\n                    name: 'Address',\r\n                    draggable: '[class|=\"col\"]',\r\n                    components: `<b>Twitter, Inc.</b><br>\r\n                        1355 Market Street, Suite 900<br>\r\n                        San Francisco, CA 94103<br>\r\n                        <abbr title=\"Phone\">P:</abbr> (123) 456-7890`,\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return address;\r\n}","export default (config) => {\r\n    const blockquoteComponent = config.constants.components.typography.blockquote;\r\n    let blockquote = {\r\n        type: blockquoteComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && el.tagName === blockquoteComponent.tags ) {\r\n                    return { type: blockquoteComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: blockquoteComponent.tags,\r\n                    name: 'Blockquote',\r\n                    draggable: '[class|=\"col\"]',\r\n                    components: `<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\r\n                    <footer>Someone famous in <cite title=\"Source Title\">Source Title</cite></footer>`,\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Helper Classes',\r\n                            name: 'class',\r\n                            options: blockquoteComponent.classes.map( bootstrap_class => { return {id: bootstrap_class, name: bootstrap_class} } )\r\n                        }\r\n                    ],\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return blockquote;\r\n}","export default (config) => {\r\n    const listComponent = config.constants.components.typography.list;\r\n    const listTypes = listComponent.tags;\r\n    let list = {\r\n        type: listComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && listTypes.includes(el.tagName)) {\r\n                    return { type: listComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: 'UL',\r\n                    name: 'List',\r\n                    draggable: '[class|=\"col\"]',\r\n                    components: `<li>This is a list</li>\r\n                        <li>Change this to a numbered list in the traits tab</li>\r\n                        <li>Lists can be horrizontal; add the class list-inline</li>\r\n                        <li>Make this list unstyled by adding class list-unstyled</li>`,\r\n                    traits: [ \r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'List Type',\r\n                            name: 'tagName',\r\n                            changeProp: 1,\r\n                            options: listTypes.map(type => { return {id: type, name: type} } )\r\n                        },\r\n                        {\r\n                            type: 'checkbox',\r\n                            label: 'No List Styleing',\r\n                            name: 'class',\r\n                            valueTrue: 'list-unstyled',\r\n                            valueFalse: 'GJS_NO_CLASS',\r\n                        },\r\n                        {\r\n                            type: 'checkbox',\r\n                            label: 'Inline List',\r\n                            name: 'class',\r\n                            valueTrue: 'list-inline',\r\n                            valueFalse: 'GJS_NO_CLASS',\r\n                        },\r\n                    ]\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return list;\r\n}","export default (config) => {\r\n    const descriptionlistComponent = config.constants.components.typography.descriptionlist;\r\n    let descriptionlist = {\r\n        type: descriptionlistComponent.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && el.tagName && el.tagName === descriptionlistComponent.tags ) {\r\n                    return { type: descriptionlistComponent.id }\r\n                }\r\n            },\r\n            extend: 'text',\r\n            model: {\r\n                defaults: {\r\n                    tagName: descriptionlistComponent.tags,\r\n                    name: 'Description List',\r\n                    draggable: '[class|=\"col\"]',\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'checkbox',\r\n                            label: 'Horizontal',\r\n                            name: 'class',\r\n                            valueTrue: 'dl-horizontal',\r\n                            valueFalse: 'GJS_NO_CLASS',\r\n                    }]\r\n                },\r\n            },\r\n            extendView: 'text',\r\n            view: {},\r\n        }\r\n    }\r\n    return descriptionlist;\r\n}","export default (config) => {\r\n    const { table } = config.constants.components.tables;\r\n   \r\n    let props = {};\r\n    table.classes.forEach(element => props[element] = false );\r\n\r\n    let table_component = {\r\n        type: table.id,\r\n        methods: {\r\n            model: {\r\n                defaults: {\r\n                    name: 'Table',\r\n                    draggable: '[class|=\"col\"]',\r\n                    classes: ['table'],\r\n                    attributes: props,\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                        ...table.classes.map( (tableclass, index) => {\r\n                            let label = tableclass.split('-');\r\n                            label = label[label.length - 1];\r\n                            return {\r\n                                type: 'checkbox',\r\n                                label: label,\r\n                                name: tableclass,\r\n                                valueTrue: tableclass,\r\n                                valueFalse: false,\r\n                            }\r\n                        })\r\n                    ],\r\n                },\r\n                \r\n                updated(property, value, prevValue) {\r\n                    if(property === 'attributes') {\r\n\r\n                        let tmp = Object.values(value);\r\n\r\n                        let tmp2 = tmp.filter(x=>x);\r\n\r\n                        tmp2.unshift('table');\r\n\r\n                        this.setClass(tmp2);\r\n                    }\r\n                },\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n    return table_component;\r\n}","export default (config) => {\r\n    const { tabledata } = config.constants.components.tables;\r\n   \r\n    let tabledata_component = {\r\n        type: tabledata.id,\r\n        methods: {\r\n            model: {\r\n                \r\n                isComponent(el) {\r\n                    let result = '';\r\n                    if(el.tagName == 'TD') {\r\n                        result = {\r\n                            type: 'cell',\r\n                            tagName: tag.toLowerCase()\r\n                        };\r\n                    }\r\n                    return result;\r\n                },\r\n\r\n                defaults: {\r\n                    name: 'Table Data',\r\n                    draggable: ['table tr'],\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Cell Type',\r\n                            name: 'tagName',\r\n                            changeProp: 1,\r\n                            options: [\r\n                                { id: 'th', name: 'table header' },\r\n                                { id: 'td', name: 'table data' }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Context Class',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: ' ', name: 'none' },\r\n                                ...tabledata.classes.map(contextClass => ({\r\n                                    id: contextClass, name: contextClass\r\n                                }))\r\n                            ] \r\n                        }\r\n                    ]\r\n                },\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n    return tabledata_component;\r\n}","export default (config) => {\r\n    const { table } = config.constants.components.tables;\r\n   \r\n    let table_responsive_component = {\r\n        type: table.wrapper.id,\r\n        methods: {\r\n            model: {\r\n                isComponent: (el) => {\r\n                    if (el && el.tagName === 'DIV' && el.className === 'table-responsive' ) {\r\n                        return { type: table.wrapper.id }\r\n                    }\r\n                },\r\n                extend: 'default',\r\n                defaults: {\r\n                    name: 'Table Responsive Wrapper',\r\n                    draggable: '[class|=\"col\"]',\r\n                    droppable: false,\r\n                    editable: false,\r\n                    classes: ['table-responsive'],\r\n                },\r\n            },\r\n\r\n        }\r\n    }\r\n    return table_responsive_component;\r\n}","export default (config) => {\r\n    const { tablerow } = config.constants.components.tables;\r\n   \r\n    let tablerow_component = {\r\n        type: tablerow.id,\r\n        methods: {\r\n            model: {\r\n                \r\n                isComponent(el) {\r\n                    let result = '';\r\n                    if(el.tagName == 'TR' || el.tagName == 'tr' ) {\r\n                        result = {\r\n                            type: tablerow.id,\r\n                            tagName: tag.toLowerCase()\r\n                        };\r\n                    }\r\n                    return result;\r\n                },\r\n\r\n                defaults: {\r\n                    name: 'Table Row',\r\n                    draggable: ['tbody'],\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Context Class',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: ' ', name: 'none' },\r\n                                ...tablerow.classes.map(contextClass => ({\r\n                                    id: contextClass, name: contextClass\r\n                                }))\r\n                            ] \r\n                        }\r\n                    ]\r\n                },\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n    return tablerow_component;\r\n}","export default (config) => {\r\n    const { tablehead } = config.constants.components.tables;\r\n   \r\n    let tablehead_component = {\r\n        type: tablehead.id,\r\n        methods: {\r\n            model: {\r\n                \r\n                isComponent(el) {\r\n                    let result = '';\r\n                    if(tablehead.tags.includes(el.tagName) ) {\r\n                        result = {\r\n                            type: tablehead.id,\r\n                            tagName: tag.toLowerCase()\r\n                        };\r\n                    }\r\n                    return result;\r\n                },\r\n\r\n                defaults: {\r\n                    name: 'Table Head',\r\n                    draggable: ['table'],\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                    ]\r\n                },\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n    return tablehead_component;\r\n}","export default (config) => {\r\n    const { tablefoot } = config.constants.components.tables;\r\n   \r\n    let tablefoot_component = {\r\n        type: tablefoot.id,\r\n        methods: {\r\n            model: {\r\n                isComponent(el) {\r\n                    let result = '';\r\n                    if(tablefoot.tags.includes(el.tagName) ) {\r\n                        result = {\r\n                            type: tablefoot.id,\r\n                            tagName: tag.toLowerCase()\r\n                        };\r\n                    }\r\n                    return result;\r\n                },\r\n\r\n                defaults: {\r\n                    name: 'Table Foot',\r\n                    draggable: ['table'],\r\n                    traits: [\r\n                        'id',\r\n                        'title',\r\n                    ]\r\n                },\r\n            \r\n            },\r\n\r\n        }\r\n    }\r\n    return tablefoot_component;\r\n}","export default (config) => {\r\n    const { form } = config.constants.components.forms;\r\n    let form_component = {\r\n        type: form.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && form.tags.includes(el.tagName) ) {\r\n                    return { type: form.id }\r\n                }\r\n            },\r\n            model: {\r\n                defaults: {\r\n                    name: 'Form',\r\n                    draggable: '[class|=col]',\r\n                    droppable: true,\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                        type: 'select',\r\n                        label: 'Type',\r\n                        name: 'class',\r\n                        options: [\r\n                            { id: ' ', name: 'Default' },\r\n                            ...form.classes.map(formclass => ({ id: formclass, name: formclass }) )\r\n                        ]\r\n                    }]\r\n                },\r\n            },\r\n        }\r\n    }\r\n    return form_component;\r\n}","export default (config) => {\r\n    const { form_group } = config.constants.components.forms;\r\n    let form_group_component = {\r\n        type: form_group.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && (form_group.tags.includes(el.tagName) && el.classList.contains('form-group'))) {\r\n                    return { type: form_group.id }\r\n                }\r\n            },\r\n            model: {\r\n                defaults: {\r\n                    name: 'Form-group',\r\n                    draggable: 'FORM',\r\n                    droppable: true,\r\n                    traits:[\r\n                        'id',\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Size',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: 'form-group', name: 'Regular' },\r\n                                { id: 'form-group form-group-lg', name: 'Large' },\r\n                                { id: 'form-group form-group-sm', name: 'Small' },\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Validation State',\r\n                            name: 'class',\r\n                            options: [\r\n                                ...form_group.validation_state_classes.map(x => ({id:x,name:x}))\r\n                            ]\r\n                        },\r\n                        \r\n                    ]\r\n                },\r\n\r\n                updated(property, value, prevValue) {\r\n                    if(property != 'classes') return;\r\n                    console.log('property', property);\r\n                    console.log('value', value.models);\r\n                    console.log('prev value', prevValue);\r\n                    console.log(this.getClasses());\r\n                }\r\n\r\n            },\r\n        }\r\n    }\r\n    return form_group_component;\r\n}","export default (config) => {\r\n    const { form_label } = config.constants.components.forms;\r\n    let form_label_component = {\r\n        type: form_label.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && form_label.tags.includes(el.tagName)) {\r\n                    return { type: form_label.id }\r\n                }\r\n            },\r\n            model: {\r\n                defaults: {\r\n                    tagName: 'label',\r\n                    name: 'Form-label',\r\n                    draggable: '.form-group',\r\n                    droppable: false,\r\n                    attributes: {\r\n                        for: 'defaultInput',\r\n                    },\r\n                    editable: true,\r\n                    classes: ['control-label'],\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'text',\r\n                            label: 'For input id',\r\n                            name: 'for',\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Size',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: 'form-control', name: 'Regular' },\r\n                                { id: 'form-control input-lg', name: 'Large' },\r\n                                { id: 'form-control input-sm', name: 'Small' },\r\n                            ]\r\n                        },\r\n                       // add select trait for col classes, to size labels\r\n                    ]\r\n                },\r\n            },\r\n        }\r\n    }\r\n    return form_label_component;\r\n}","export default (config) => {\r\n    const { form_control } = config.constants.components.forms;\r\n    let form_control_input = {\r\n        type: form_control.input.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && form_control.input.tags.includes(el.tagName) && (el.type != 'checkbox' && el.type != 'radio' )) {\r\n                    return { type: form_control.input.id }\r\n                }\r\n            },\r\n            model: {\r\n                defaults: {\r\n                    tagName: 'input',\r\n                    name: 'Form-input',\r\n                    draggable: '.form-group', /* forcing just this option for now */\r\n                    droppable: false,\r\n                    attributes: {\r\n                        id: 'defaultInput',\r\n                        placeholder: 'placeholder text',\r\n                        type: 'text',\r\n                    },\r\n                    classes: 'form-control',\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'text',\r\n                            label: 'Placeholder',\r\n                            name: 'placeholder',\r\n                            // changeProp: 1,\r\n                            // placeholder: '',\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Size',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: 'form-control', name: 'Regular' },\r\n                                { id: 'form-control input-lg', name: 'Large' },\r\n                                { id: 'form-control input-sm', name: 'Small' },\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Input Type',\r\n                            name: 'type',\r\n                            options: [\r\n                                ...form_control.input.attributes.types.map(type => ({ id: type, name: type }))\r\n                            ]\r\n                        },\r\n                       \r\n                    ]\r\n                },\r\n            },\r\n        }\r\n    }\r\n    return form_control_input;\r\n}","export default (config) => {\r\n    const { form_control } = config.constants.components.forms;\r\n    let form_control_textarea = {\r\n        type: form_control.textarea.id,\r\n        methods: {\r\n            isComponent: (el) => {\r\n                if (el && form_control.textarea.tags.includes(el.tagName)) {\r\n                    return { type: form_control.textarea.id }\r\n                }\r\n            },\r\n            model: {\r\n                defaults: {\r\n                    name: 'Form-Textarea',\r\n                    draggable: '.form-group',\r\n                    droppable: false,\r\n                    attributes: {\r\n                        palceholder: 'placeholder text',\r\n                    },\r\n                    classes: 'form-control',\r\n                    traits:[\r\n                        'id',\r\n                        'title',\r\n                        {\r\n                            type: 'text',\r\n                            label: 'Placeholder text',\r\n                            name: 'placeholder',\r\n                            // changeProp: 1,\r\n                            // placeholder: '',\r\n                        },\r\n                        {\r\n                            type: 'select',\r\n                            label: 'Size',\r\n                            name: 'class',\r\n                            options: [\r\n                                { id: 'form-control', name: 'Regular' },\r\n                                { id: 'form-control input-lg', name: 'Large' },\r\n                                { id: 'form-control input-sm', name: 'Small' },\r\n                            ]\r\n                        },\r\n                       // add number input for rows?   \r\n                    ]\r\n                },\r\n            },\r\n        }\r\n    }\r\n    return form_control_textarea;\r\n}","import grid_system_components from './grid_system/';\r\nimport typography_components from './typography/';\r\nimport tables_components from './tables/';\r\nimport forms_components from './forms/';\r\n\r\nexport default (editor, config) => {\r\n    const domc = editor.DomComponents;\r\n    const defaultType = domc.getType('default');\r\n    const defaultModel = defaultType.model;\r\n    const defaultView = defaultType.view;\r\n    \r\n    const componentList = [\r\n        ...grid_system_components(config),\r\n        ...typography_components(config),\r\n        ...tables_components(config),\r\n        ...forms_components(config),\r\n    ];\r\n    \r\n    componentList.forEach(component => domc.addType(component.type, component.methods));\r\n    \r\n  }\r\n  ","import column from './grid_system_components/column';\r\nimport container from './grid_system_components/container';\r\nimport row from './grid_system_components/row';\r\n\r\nexport default (config) => {\r\n    \r\n    const grid_system_components = [\r\n        column(config), \r\n        container(config), \r\n        row(config),\r\n    ];\r\n\r\n    return grid_system_components;\r\n\r\n}","import heading from './typography_components/heading';\r\nimport paragraph from './typography_components/paragraph';\r\nimport abbreviation from './typography_components/abbreviation';\r\nimport address from './typography_components/address';\r\nimport blockquote from './typography_components/bockquote';\r\nimport list from './typography_components/list';\r\nimport descriptionlist from './typography_components/descriptionlist';\r\n\r\nexport default (config) => {\r\n    \r\n    const typography_components = [\r\n        heading(config),\r\n        paragraph(config),\r\n        abbreviation(config),\r\n        address(config),\r\n        blockquote(config),\r\n        list(config),\r\n        descriptionlist(config),\r\n    ];\r\n\r\n    return typography_components;\r\n\r\n}","import table from \"./tables_components/table\";\r\nimport tabledata from \"./tables_components/tabledata\";\r\nimport table_responsive from \"./tables_components/table_responsive\";\r\nimport tablerow from \"./tables_components/tablerow\";\r\nimport tablehead from \"./tables_components/tablehead\";\r\nimport tablefoot from \"./tables_components/tablefoot\";\r\n\r\nexport default (config) => {\r\n    \r\n    const tables_components = [\r\n        table(config),\r\n        table_responsive(config),\r\n        tablehead(config),\r\n        tablefoot(config),\r\n        tablerow(config),\r\n        tabledata(config),\r\n    ];\r\n\r\n    return tables_components;\r\n\r\n}","import form from \"./forms_components/form\";\r\nimport form_group from \"./forms_components/form_group\";\r\nimport label from \"./forms_components/label\";\r\nimport input from \"./forms_components/input\";\r\nimport textarea from \"./forms_components/textarea\";\r\n\r\nexport default (config) => {\r\n    \r\n    const forms_components = [\r\n        form(config),\r\n        form_group(config),\r\n        label(config),\r\n        input(config),\r\n        textarea(config),\r\n    ];\r\n\r\n    return forms_components;\r\n\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.row.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { heading, paragraph } = config.constants.components.typography;\r\n    let row_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Row',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-minus' },\r\n            content: {\r\n                type: row.id,\r\n                components: {\r\n                    type: column.id,\r\n                    components: [\r\n                        {\r\n                            type: heading.id,\r\n                            components:\r\n                                {\r\n                                    type: 'textnode',\r\n                                    content: 'Rows - horizontal containers for columns'\r\n                                }\r\n                        },\r\n                        {\r\n                            type: paragraph.id,\r\n                            components: \r\n                                {\r\n                                    type: 'textnode',\r\n                                    content: 'Change column traits in the traits tab. This is col-xs-12; put your content within columns.'\r\n                                }\r\n                        }\r\n                    ]\r\n                },\r\n            }\r\n        }\r\n    }\r\n    return row_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column.id;\r\n    const { column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-square' },\r\n            content: {\r\n                type: column.id,\r\n                components: [{\r\n                    type: paragraph.id,\r\n                    components: [{\r\n                        type: 'textnode',\r\n                        content: 'This is a column; use settings tab to change its width.',\r\n                    }]\r\n                }],\r\n            }\r\n        }\r\n    }\r\n    return column_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_3_9.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_3_9_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 3/9',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-3'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 3',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-9'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 9',\r\n                        }]\r\n                    }],\r\n                }]\r\n            },\r\n        }\r\n    }\r\n    return column_3_9_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_9_3.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_9_3_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 9/3',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-9'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 9',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-3'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 3',\r\n                        }]\r\n                    }],\r\n                }],\r\n            },\r\n        }\r\n    }\r\n    return column_9_3_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_4_8.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_4_8_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 4/8',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-4'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 4',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-8'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 8',\r\n                        }]\r\n                    }],\r\n                }],\r\n            },\r\n        }\r\n    }\r\n    return column_4_8_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_8_4.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_8_4_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 8/4',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-8'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 8',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-4'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 4',\r\n                        }]\r\n                    }],\r\n                }],\r\n            },\r\n        }\r\n    }\r\n    return column_8_4_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_4_4_4.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_4_4_4_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 4/4/4',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-4'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 4',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-4'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 4',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-4'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 4',\r\n                        }]\r\n                    }],\r\n                }],\r\n            },\r\n        }\r\n    }\r\n    return column_4_4_4_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.gridsystem.column_3_6_3.id;\r\n    const { row, column } = config.constants.components.gridsystem;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let column_3_6_3_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Column 3/6/3',\r\n            category: 'Layout',\r\n            attributes: { class: 'fa fa-columns' },\r\n            content: {\r\n                type: row.id,\r\n                components: [{\r\n                    type: column.id,\r\n                    classes: ['col-xs-3'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 3',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-6'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 6',\r\n                        }]\r\n                    }],\r\n                },{\r\n                    type: column.id,\r\n                    classes: ['col-xs-3'],\r\n                    components: [{\r\n                        type: paragraph.id,\r\n                        components: [{\r\n                            type: 'textnode',\r\n                            content: 'column - 3',\r\n                        }]\r\n                    }],\r\n                }],\r\n            },\r\n        }\r\n    }\r\n    return column_3_6_3_block;\r\n}","import container from './grid_system_blocks/container';\r\nimport row from './grid_system_blocks/row';\r\nimport column from './grid_system_blocks/column';\r\nimport column_3_9 from './grid_system_blocks/column_3_9';\r\nimport column_9_3 from './grid_system_blocks/column_9_3';\r\nimport column_4_8 from './grid_system_blocks/column_4_8';\r\nimport column_8_4 from './grid_system_blocks/column_8_4';\r\nimport column_4_4_4 from './grid_system_blocks/column_4_4_4';\r\nimport column_3_6_3 from './grid_system_blocks/column_3_6_3';\r\n\r\nexport default (editor, config) => {\r\n    let grid_system_blocks = [\r\n        // container(editor, config),\r\n        row(editor, config),\r\n        column(editor, config),\r\n        column_3_9(editor, config),\r\n        column_9_3(editor, config),\r\n        column_4_8(editor, config),\r\n        column_8_4(editor, config),\r\n        column_4_4_4(editor, config),\r\n        column_3_6_3(editor, config),\r\n    ];\r\n    \r\n    return grid_system_blocks;\r\n}\r\n\r\n","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.heading.id;\r\n    const { heading } = config.constants.components.typography;\r\n    let heading_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Heading',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-header\" },\r\n            content: {\r\n                type: heading.id,\r\n                    components: [{\r\n                        type: 'textnode',\r\n                        content: 'This is a heading; use traits tab to change its size.',\r\n                    }]\r\n            }\r\n        }\r\n    }\r\n    return heading_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.paragraph.id;\r\n    const { paragraph } = config.constants.components.typography;\r\n    let paragraph_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Text',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-font\" },\r\n            content: {\r\n                type: paragraph.id,\r\n                    components: [{\r\n                        type: 'textnode',\r\n                        content: 'This is a paragraoh; use the traits tab to change its properties.',\r\n                    }]\r\n            }\r\n        }\r\n    }\r\n    return paragraph_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.address.id;\r\n    const { address } = config.constants.components.typography;\r\n    let address_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Address',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-address-card\" },\r\n            content: {\r\n                type: address.id,\r\n            },\r\n        }\r\n    }\r\n    return address_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.blockquote.id;\r\n    const { blockquote } = config.constants.components.typography;\r\n    let blockquote_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Block Quote',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-quote-right\" },\r\n            content: {\r\n                type: blockquote.id,\r\n            },\r\n        }\r\n    }\r\n    return blockquote_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.list.id;\r\n    const { list } = config.constants.components.typography;\r\n    let list_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'List',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-list\" },\r\n            content: {\r\n                type: list.id,\r\n            }\r\n        }\r\n    }\r\n    return list_block;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.typography.descriptionlist.id;\r\n    const { descriptionlist } = config.constants.components.typography;\r\n    let descriptionlist_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Description List',\r\n            category: 'Typography',\r\n            attributes: { class: \"fa fa-th-list\" },\r\n            content: {\r\n                type: descriptionlist.id,\r\n                    components: `\r\n                    <dt>Description lists</dt>\r\n                        <dd>A description list is perfect for defining terms.</dd>\r\n                    <dt>Horizontal</dt>\r\n                        <dd>You can make this list horizontal in the traits panel.</dd>\r\n                        <dd>Select the list by hitting the up arrow in the blue select box.</dd>\r\n                    <dt>Selection Help</dt>\r\n                        <dd>The Layers panel helps to find components that are hard to click.</dd>`,\r\n            }\r\n        }\r\n    }\r\n    return descriptionlist_block;\r\n}","import heading from './typography_blocks/heading';\r\nimport paragraph from './typography_blocks/paragraph';\r\nimport abbreviation from './typography_blocks/abbreviation';\r\nimport address from './typography_blocks/address';\r\nimport blockquote from './typography_blocks/blockquote';\r\nimport list from './typography_blocks/list';\r\nimport descriptionlist from './typography_blocks/descriptionlist';\r\n\r\nexport default (editor, config) => {\r\n    let typography_blocks = [\r\n        heading(editor, config),\r\n        paragraph(editor, config),\r\n        // abbreviation(editor, config),\r\n        address(editor, config),\r\n        blockquote(editor, config),\r\n        list(editor, config),\r\n        descriptionlist(editor, config),\r\n    ];\r\n    \r\n    return typography_blocks;\r\n}\r\n\r\n","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.forms.form.id;\r\n    const { form, form_group, form_label, form_control } = config.constants.components.forms;\r\n    let form_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Form',\r\n            category: 'Forms',\r\n            attributes: { class: \"fa fa-check-square-o\" },\r\n            content: `\r\n            <form>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Email\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"exampleInputFile\">File input</label>\r\n                <input type=\"file\" id=\"exampleInputFile\">\r\n                <p class=\"help-block\">Example block-level help text here.</p>\r\n              </div>\r\n              <div class=\"checkbox\">\r\n                <label>\r\n                  <input type=\"checkbox\"> Check me out\r\n                </label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n            </form>`\r\n            // {\r\n            //     type: form.id,\r\n            //     components: {\r\n            //             type: form_group.id,\r\n            //             components: [\r\n            //                 {\r\n            //                     type: form_label.id,\r\n            //                 }, {\r\n            //                     type: form_control.input.id\r\n            //                 }]\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    return form_block;\r\n}","import form from \"./forms_blocks/form\";\r\n\r\nexport default (editor, config) => {\r\n\r\n    let forms_blocks = [\r\n        form(editor, config),\r\n    ];\r\n    \r\n    return forms_blocks;\r\n}","export default (editor, config) => {\r\n    const blockId = config.constants.blocks.basics.basic_link.id;\r\n    const { basic_link } = config.constants.components.basics;\r\n    let basic_link_block = {\r\n        id: blockId,\r\n        opts: {\r\n            label: 'Link',\r\n            category: 'Basics',\r\n            attributes: { class: 'fa fa-link' },\r\n            content: {\r\n                type: basic_link.id,\r\n            }\r\n        }\r\n    }\r\n    return basic_link_block;\r\n}","import basic_link from './basics_blocks/basic_link';\r\n\r\nexport default (editor, config) => {\r\n\r\n    let basics_blocks = [\r\n        basic_link(editor, config),\r\n    ];\r\n    \r\n    return basics_blocks;\r\n}","import openImport from './functions/openImport';\r\nimport aboutModal from './functions/aboutModal';\r\n\r\nexport default (editor, config = {}) => {\r\n    const panelManager = editor.Panels;\r\n    const addButtonToPanels = btn => panelManager.addButton('options', btn);\r\n    const panelButtons = [\r\n        {id: 'undo', className: 'fa fa-undo', command: e => e.runCommand('core:undo'), attributes: { title: 'Undo'}, active: false,},\r\n        {id: 'redo', className: 'fa fa-repeat', command: e => e.runCommand('core:redo'), attributes: { title: 'Redo'}, active: false,},\r\n        {id: 'gjs-open-import-webpage', className: 'fa fa-download', command: 'gjs-open-import-webpage', attributes: { title: 'Import'}, active: false,},\r\n        {id: 'canvas-clear', className: 'fa fa-trash', command: 'canvas-clear', attributes: { title: 'Clear Canvas'}, active: false,},\r\n        {id: 'About', className: 'fa fa-question-circle', command: 'about-modal', attributes: { title: 'About'}, active: false,},\r\n    ];\r\n    panelButtons.forEach(addButtonToPanels);\r\n\t\r\n\tconst commands = editor.Commands;\r\n\tcommands.add('gjs-open-import-webpage', openImport(editor));\r\n\tcommands.add('canvas-clear', e => confirm('Are you sure you want to clear the canvas?') && e.runCommand('core:canvas-clear'));\r\n\tcommands.add('about-modal', aboutModal(editor));\r\n}\r\n","export default (editor) => {\r\n\r\n    let config = { inmportViewerOptions: {} };\r\n    const pfx = editor.getConfig('stylePrefix');\r\n    const modal = editor.Modal;\r\n    const codeViewer = editor.CodeManager.getViewer('CodeMirror').clone();\r\n    const container = document.createElement('div');\r\n    const importLabel = '<div style=\"margin-bottom: 10px; font-size: 13px;\">Paste your HTML/CSS and click Import</div>';\r\n    const importCnt = (editor) => editor.getHtml() + '<style>' + editor.getCss() + '</style>';\r\n    let viewerEditor = codeViewer.editor;\r\n\r\n    // Init import button\r\n    const btnImp = document.createElement('button');\r\n    btnImp.type = 'button';\r\n    btnImp.innerHTML = 'Import';\r\n    btnImp.className = `${pfx}btn-prim ${pfx}btn-import`;\r\n    btnImp.onclick = e => {\r\n        editor.setComponents(viewerEditor.getValue().trim());\r\n        modal.close();\r\n    };\r\n\r\n    // Init code viewer\r\n    codeViewer.set({ ...{\r\n        codeName: 'htmlmixed',\r\n        theme: 'hopscotch',\r\n        readOnly: 0\r\n        }, ...config.importViewerOptions });\r\n\r\n    return {\r\n        run(editor) {\r\n            if (!viewerEditor) {\r\n                const txtarea = document.createElement('textarea');\r\n                \r\n                if (importLabel) {\r\n                    const labelEl = document.createElement('div');\r\n                    labelEl.className = `${pfx}import-label`;\r\n                    labelEl.innerHTML = importLabel;\r\n                    container.appendChild(labelEl);\r\n                }\r\n    \r\n                container.appendChild(txtarea);\r\n                container.appendChild(btnImp);\r\n                codeViewer.init(txtarea);\r\n                viewerEditor = codeViewer.editor;\r\n            }\r\n    \r\n            modal.setTitle('Import Template');\r\n            modal.setContent(container);\r\n            const cnt = typeof importCnt == 'function' ? importCnt(editor) : importCnt;\r\n            codeViewer.setContent(cnt || '');\r\n            modal.open().getModel()\r\n            .once('change:open', () => editor.stopCommand(this.id));\r\n            viewerEditor.refresh();\r\n        },\r\n    \r\n        stop() {\r\n            modal.close();\r\n        }\r\n    }\r\n    \r\n}","export default (editor) => {\r\n    const modal = editor.Modal;\r\n    const modalTitle = 'Welcome!';\r\n\tconst container = `\r\n\t\t<div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>Double-click to edit a component.</li>\r\n            \t<li>Changes save automatically.</li>\r\n\t\t\t\t<li>You cannot nest \"conainter\" blocks.</li>\r\n\t\t\t\t<li>Containers have a fixed width. If you want a full-width container, use \"container-fluid\".</li>\r\n\t\t\t\t<li>Use \"row\" blocks to house collectoin of \"columns\".</li>\r\n\t\t\t\t<li>Put your content within \"columns\" to fully utilize the responsive nature of Bootstrap.</li>\r\n\t\t\t\t<li>Use the traits panel to adjust the width of your columns. Width is abstracted as 1 through 12.</li>\r\n\t\t\t\t<li>Use xs, sm, md, and lg to set breakpoints for responsive column widths at certain screen sizes.</li>\r\n\t\t\t\t<li>When using the Style Manager panel, keep in mind that changes will happen to all components who share a specific class with the component you are editing.</li>\r\n\t\t\t\t<li>To keep changes contained to the component you are editing, give it a unique class name at the top of the Style Manager panel.</li>\r\n\t\t\t</ul>\r\n\t\t</div>`;\r\n    \r\n\treturn {\r\n\t\trun(editor) {\r\n\t\t\tmodal.setTitle(modalTitle);\r\n\t\t\tmodal.setContent(container);\r\n\t\t\tmodal.open().getModel()\r\n\t\t\t.once('change:open', () => editor.stopCommand(this.id));\r\n\t\t},\r\n\t\r\n\t\tstop() {\r\n\t\t\tmodal.close();\r\n\t\t}\r\n\t};\r\n}","import selectClass from './selectClass/'\r\n\r\nexport default function (editor, config = {}) {\r\n  selectClass(editor, config)\r\n}","export default function (editor, config = {}) {\r\n    const trm = editor.TraitManager\r\n  \r\n    trm.addType('select-class', {\r\n      // Expects as return a simple HTML string or an HTML element\r\n      events: {\r\n        'change': 'onChange'\r\n      },\r\n  \r\n      onValueChange: function () {\r\n        let classes = this.model.get('options').map(opt => opt.value);\r\n\r\n        for (let i = 0; i < classes.length; i++) {\r\n\r\n          if (classes[i].length > 0) {\r\n            let classesN = classes[i].split(' ')\r\n\r\n            for (let j = 0; j < classesN.length; j++) {\r\n\r\n              if (classesN[j].length > 0) {\r\n                this.target.removeClass(classesN[j])\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        const value = this.model.get('value')\r\n\r\n        if (value.length > 0 && value !== 'GJS_NO_CLASS') {\r\n          const valueN = value.split(' ')\r\n\r\n          for (let i = 0; i < valueN.length; i++) {\r\n            this.target.addClass(valueN[i])\r\n          }\r\n        }\r\n\r\n        this.target.em.trigger('component:toggled')\r\n      },\r\n  \r\n      getInputEl: function () {\r\n        if (!this.inputEl) {\r\n          const model = this.model\r\n          const options = model.get('options') || []\r\n          const input = document.createElement('select')\r\n          const targetViewEl = this.target.view.el\r\n  \r\n          for (let i = 0; i < options.length; i++) {\r\n            let name = options[i].name\r\n            let value = options[i].value\r\n  \r\n            if (value === '') {\r\n              value = 'GJS_NO_CLASS'\r\n            }\r\n  \r\n            const option = document.createElement('option')\r\n            option.text = name\r\n            option.value = value\r\n  \r\n            if (targetViewEl.classList.contains(value)) {\r\n              option.setAttribute('selected', 'selected')\r\n            }\r\n            input.append(option)\r\n          }\r\n  \r\n          this.inputEl = input\r\n        }\r\n        return this.inputEl\r\n      }\r\n    })\r\n  }","// feature -> subfeature -> (any combination of these:) tags, classes, attributes\r\nexport const bootStrap3 = {\r\n    gridsystem: {\r\n        mediaQueries: [\r\n            // min-width:{breakpoint}px, xs is anything less than 768px\r\n            {bslabel: 'xs', breakpoint: 575},\r\n            {bslabel: 'sm', breakpoint: 768},\r\n            {bslabel: 'md', breakpoint: 992},\r\n            {bslabel: 'lg', breakpoint: 1200},\r\n        ],\r\n        containers: {\r\n            tags: ['div'],\r\n            classes: ['container', 'container-fluid'],\r\n        },\r\n        row: {\r\n            tags: ['div'],\r\n            classes: ['row'],\r\n        },\r\n        columns: {\r\n            tags: ['div'],\r\n            // col-{mediaquery Label}-{1-12}\r\n            // clearfix is used with responsive utiility classes\r\n            // offsets: col-{mediaquery}-offset-{1-12}\r\n            // may need to override offsets from lower media classes with col-*-offset-0\r\n            // push and pull only work on md?\r\n            classes: ['col', 'clearfix', 'offset', 'offset-0', 'col-md-push', 'col-md-pull'],\r\n        },\r\n    },\r\n    typography: {\r\n        headings: {\r\n            // TODO: small tags within heading blocks? (not important right now)\r\n            // , 'small'\r\n            tags: ['H1', 'H2', 'H3',  'H4',  'H5',  'H6'],\r\n            // apply these classes to <p> tags only, for this app (div tags? difference?)\r\n            // maybe we don't need to add these classes for this app, expect for small\r\n            // classes: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'small'],\r\n        },\r\n        bodycopy: {\r\n            // font-size: 14px, line-height: 1.428 for any text within body tag\r\n            // I think I am going to take out the text modification tags and let the Rich Text Editor deal with that\r\n            // 'mark', 'del', 's', 'ins', 'u', 'small', 'strong', 'em', 'b', 'i'\r\n            tags: ['p'],\r\n            classes: ['lead', 'small'],\r\n        },\r\n        alignment: {\r\n            tags: ['p'],\r\n            classes: ['text-left', 'text-center', 'text-right', 'text-justify', 'text-nowrap'],\r\n        },\r\n        trasnformation: {\r\n            tags: ['p'],\r\n            classes: ['text-lowercase', 'text-uppercase', 'text-capitalize'],\r\n        },\r\n        abbrevaitions: {\r\n            tags: ['abbr'],\r\n            classes: ['initialism'],\r\n            attributes: ['title'],\r\n        },\r\n        address: {\r\n            tags: ['address', 'br', 'strong', 'abbr', 'a'],\r\n        },\r\n        blockquotes: {\r\n            // cite tags can have title attritubes\r\n            tags: ['blockquote', 'p', 'footer', 'cite'],\r\n            classes: ['blockquote-reverse'],\r\n        },\r\n        lists: {\r\n            tags: ['UL', 'OL', 'LI'],\r\n            classes: ['list-unstyled', 'list-inline'],\r\n        },\r\n        descriptionLists: {\r\n            tags: ['dl', 'dt', 'dd'],\r\n            classes: ['dl-horizontal'],\r\n        },\r\n    },\r\n    code: {\r\n        inline: {\r\n            tags: ['code'],\r\n        },\r\n        userInput: {\r\n            tags: ['kbd'],\r\n        },\r\n        basicBlock: {\r\n            tags: ['pre'],\r\n            classes: ['pre-scrollable'],\r\n        },\r\n        variables: {\r\n            tags: ['var'],\r\n        },\r\n        sampleOutput: {\r\n            tags: ['samp'],\r\n        }\r\n    },\r\n    tables: {\r\n        // .table .table-striped (like .btn .btn-primary ) \r\n        tags: ['table', 'tbody'],\r\n        classes: ['table', 'table-striped', 'table-bordered', 'table-hover', 'table-condensed']\r\n        // can add contextual classes to row or cels [active, success, warning, danger, info]\r\n        // <tr class=\"active\" ... ; <td class=\"success\" ... (or th)\r\n        // wrap a table in a <div class=\"table-responsive\"> to make the child table responsive\r\n    },\r\n    forms: {},\r\n    buttons: {\r\n        // bs allows <a> and input, but i'm not going to use them for grapes\r\n        tags: ['button'],\r\n        classes: ['btn'],\r\n        colorClasses: ['btn-default', 'btn-primary', 'btn-success', 'btn-info', 'btn-warning', 'btn-danger', \r\n            'btn-link'],\r\n        sizeClasses: ['btn-lg', 'btn-sm', 'btn-xs', 'btn-block', 'active', 'navbar-btn'],\r\n        // idk if attribute will become relevant for the scope of this app\r\n        // aria-pressed=\"true\" with active class to force active state\r\n        // disabled=\"disabled\" to show disabled state (I belive this stops click event)\r\n        attributes: ['type', 'aria-pressed', 'disabled'],\r\n    },\r\n    images: {},\r\n    helperClasses: {},\r\n    responsiveUtilities: {},\r\n}","import { bootStrap3 } from './bootstrap3/bootstrap3';\r\n// TODO blockIds and componentIds lists in order to have an easy array to do a find on? when filtering for active modules?\r\n\r\nconst contextClasses = ['active','success','warning','danger','info'];\r\n\r\nexport const constants = {\r\n\r\n    blocks: {\r\n\r\n        basics: {\r\n            basic_link: {id: 'basic_link_block'},\r\n        },\r\n\r\n        gridsystem: { \r\n            container: {id: 'container_block'},\r\n            row: { id: 'row_block'},\r\n            column: { id: 'column_block' },\r\n            column_3_9: { id: 'column_3_9_block' },\r\n            column_9_3: { id: 'column_9_3_block' },\r\n            column_4_8: { id: 'column_4_8_block' },\r\n            column_8_4: { id: 'column_8_4_block' },\r\n            column_3_6_3: { id: 'column_3_6_3_block' },\r\n            column_4_4_4: { id: 'column_4_4_4_block' },\r\n        },\r\n\r\n        typography: {\r\n            heading: { id: 'heading_block'},\r\n            paragraph: { id: 'paragraph_block'},\r\n            abbreviation: { id: 'abbvreviation_block' },\r\n            address: { id: 'address_block' },\r\n            blockquote: { id: 'blockquote_block' },\r\n            list: { id: 'list_block' },\r\n            descriptionlist: { id: 'descriptionlist_block' },\r\n        },\r\n\r\n        tables: {\r\n            table: { id: 'table_block' },\r\n            table_responsive: { id: 'table_responsive_block' },\r\n            tablehead: { id: 'tablehead_block' },\r\n            tablefoot: { id: 'tablefoot_block' },\r\n            tablerow: { id: 'tablerow_block' },\r\n            tabledata: { id: 'tabledata_block' },\r\n        },\r\n\r\n        forms: {\r\n            form: { id: 'form_block' },\r\n        },\r\n\r\n    },\r\n\r\n    components: {\r\n\r\n        basics: {\r\n            basic_link: {id: 'link'},\r\n        },\r\n\r\n        gridsystem: { \r\n            container: {id: 'container_component'},\r\n            row: { id: 'row_component'},\r\n            column: { id: 'column_component' },\r\n        },\r\n        \r\n        typography: {\r\n\r\n            heading: { \r\n                id: 'heading_component',\r\n                tags: bootStrap3.typography.headings.tags,\r\n            },\r\n\r\n            paragraph: { \r\n                id: 'paragraph_component',\r\n                tags: ['P'],\r\n                classes: [\r\n                    ...bootStrap3.typography.bodycopy.classes,\r\n                    ...bootStrap3.typography.alignment.classes,\r\n                    ...bootStrap3.typography.trasnformation.classes,\r\n                ],\r\n            },\r\n\r\n            abbreviation: {\r\n                id: 'abbreviation_component',\r\n                tags: 'ABBR',\r\n                classes: ['initialism'],\r\n                attributes: ['title'],\r\n            },\r\n\r\n            address: {\r\n                id: 'address_component',\r\n                tags: 'address',\r\n            },\r\n\r\n            blockquote: {\r\n                id: 'blockquote_component', \r\n                tags: 'BLOCKQUOTE',\r\n                classes: bootStrap3.typography.blockquotes.classes,\r\n            },\r\n\r\n            list: {\r\n                id: 'list_component',\r\n                tags: ['UL', 'OL'],\r\n                classes: bootStrap3.typography.lists.classes,\r\n            },\r\n\r\n            descriptionlist: {\r\n                id: 'descriptionlist_component',\r\n                tags: 'DL',\r\n                classes: ['dl-horizontal'],\r\n            },\r\n\r\n        },\r\n\r\n        tables: {\r\n\r\n            table: {\r\n                id: 'table',\r\n                tags: 'TABLE',\r\n                classes: [\r\n                    // 'table', \r\n                    'table-striped',\r\n                    'table-bordered',\r\n                    'table-hover',\r\n                    'table-condensed'\r\n                ],\r\n                wrapper: {\r\n                    id: 'table_responsive_wrapper_component',\r\n                    tags: 'DIV',\r\n                    classes: 'table-responsive',\r\n                },\r\n            },\r\n\r\n            tablehead: {\r\n                id: 'thead',\r\n                tags: ['THEAD', 'thead'],\r\n            },\r\n\r\n            tablefoot: {\r\n                id: 'tfoot',\r\n                tags: ['TFOOT','tfoot'],\r\n            },\r\n\r\n            tablerow: {\r\n                id: 'row',\r\n                tags: 'TR',\r\n                classes: contextClasses,\r\n            },\r\n\r\n            tabledata: {\r\n                id: 'cell',\r\n                tags: 'TD',\r\n                classes: contextClasses,\r\n            },\r\n\r\n        },\r\n        \r\n        forms: {\r\n\r\n            form: {\r\n                id: 'form_component',\r\n                tags: ['FORM', 'form'],\r\n                classes: ['form-inline', 'form-horizontal']\r\n            },\r\n\r\n            form_group: {\r\n                id: 'form_group_component',\r\n                tags: ['DIV', 'div'],\r\n                classes: ['form-group', 'form-group form-group-lg', 'form-group form-group-sm'],\r\n                validation_state_classes: ['has-success', 'has-warning', 'has-error'],\r\n                // on <input class=\"form-control\"> that are \"textual\", can give .has-feedback to div.form-group\r\n                // will color an icon and position it correctly\r\n                feedback: {\r\n                    tags: ['div', 'span'],\r\n                    classes: ['has-feedback', 'form-control-feedback']\r\n                },\r\n                // add these sizing classes after using .form-group, like with buttons\r\n                form_horizontal_sizing_classes: ['form-group-lg', 'form-group-sm']\r\n            },\r\n\r\n            form_label: {\r\n                id: 'form_label_component', \r\n                tags: ['LABEL', 'label'],\r\n                // make col classes to use as reference here, spread the array\r\n                classes: ['col-*-*', 'control-label'],\r\n                // static form control is text next to a label, no interactivity; Styled by bootstrap\r\n                // wrap the <p> in a div and give it col class, give <p> class form-control-static\r\n                static_form_control: {\r\n                    tags: ['div', 'p'],\r\n                    classes: ['col-*-*', 'form-control-static']\r\n                }, \r\n            },\r\n\r\n            // if needed, can use form-controls within div.row > div.col-*-* > {form control element}\r\n            form_control: {\r\n                classes: ['form-control', 'input-lg', 'input-sm'],\r\n                attributes: ['disabled', 'readonly'],\r\n                input: {\r\n                    id: 'form_control_input',\r\n                    tags: ['INPUT', 'input'],\r\n                    // ...classes\r\n                    attributes: {\r\n                        placeholder: 'placeholder text',\r\n                        types: ['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color'],\r\n                    },\r\n                },\r\n                textarea: {\r\n                    id: 'form_control_textarea',\r\n                    tags: ['TEXTAREA', 'textarea'],\r\n                    // ...classes\r\n                    attributes: { \r\n                        placeholder: 'placeholder text',\r\n                        rows: 2,\r\n                    },\r\n                },\r\n                select: {\r\n                    id: 'form_control_select',\r\n                    tags: ['SELECT', 'select'],\r\n                    // ...classes\r\n                    attributes: {\r\n                        multiple: false,\r\n                    },\r\n                },\r\n                \r\n            },\r\n\r\n            form_radio_checkbox: {\r\n                id: 'form_radio_checkbox_component',\r\n                tags: ['DIV', 'LABEL', 'INPUT', 'div', 'label', 'input'],\r\n                classes: ['checkbox', 'radio', 'disabled'],\r\n                attributes: ['value', 'name', 'disabled', 'type'],\r\n                types: ['checkbox', 'radio'],\r\n                label_classes: ['checkbox-inline', 'radio-inline'],\r\n                // bootstrap example has div, label, input nested in label followed by text\r\n                // checkboxes value is optional\r\n                // radio buttons to work correctly should all share the same name attribute, then have a unique id and value\r\n                // to give validation state to these, wrap the <div class=\"checkbox\"> with <div class=\"has-warning/(etc...)\">\r\n            },\r\n\r\n            form_help_block: {\r\n                id: 'form_help_block_component',\r\n                tags: ['SPAN', 'span'],\r\n                classes: ['help-block'],\r\n                // match help block id to aria-describedby=\"{id}\" on the form control it is describing, for screen readers\r\n            }, \r\n\r\n            // input groups (will be nested within form-groups)\r\n\r\n        }\r\n\r\n    },\r\n\r\n}\r\n","import loadComponents from './components/';\r\nimport loadBlocks from './blocks/';\r\nimport devices from './devices/';\r\nimport panels from './panels/';\r\nimport traits from './traits/';\r\nimport {constants} from './constants/';\r\n\r\nexport default (editor, opts = {}) => {\r\n  const options = { ...{\r\n    constants\r\n  },  ...opts };\r\n\r\n  if (options.addBasicStyle) {\r\n    editor.addComponents(`\r\n      <style>\r\n        .gjs-dashed .container, .gjs-dashed .container-fluid, .gjs-dashed .row, .gjs-dashed .row > [class*=\"col-\"], .gjs-dashed .dropdown-menu {\r\n          min-height: 50px;\r\n        }\r\n        .gjs-dashed .dropdown-menu {\r\n          display: block;\r\n        }\r\n        body { background-color: #ddd }\r\n      </style>\r\n    `)\r\n  }\r\n\r\n  editor.on('load', () => editor.addComponents(`<div class=\"container\" style=\"height:100%; background-color: white;\"><h1>Click the <span class=\"glyphicon glyphicon-question-sign\"></span> button above for more info.</h1></div>`, { at: 0 }))\r\n\r\n  // TODO add the inline tags for body copy to the editor toolbar, including abbreviation component\r\n\r\n  // Add components\r\n  loadComponents(editor, options);\r\n\r\n  // Add traits\r\n  traits(editor, options); \r\n\r\n  // Add blocks\r\n  loadBlocks(editor, options);\r\n\r\n  // Add devices\r\n  devices(editor);\r\n\r\n  // Add custom panels\r\n  panels(editor);\r\n\r\n};\r\n","import grid_system from './grid_system/';\r\nimport typography from './typography/';\r\nimport tables from './tables';\r\nimport forms from './forms';\r\nimport basics from './basics';\r\n\r\nexport default (editor, config) => {\r\n  const bm = editor.BlockManager;\r\n  const addBlocks = collection => collection.forEach(block => bm.add(block.id, block.opts));\r\n  let allBlocks = [\r\n    basics(editor, config),\r\n    grid_system(editor, config),\r\n    typography(editor, config),\r\n    // tables(editor, config),\r\n    forms(editor, config),\r\n  ];\r\n  allBlocks.forEach(addBlocks);\r\n}\r\n","export default (editor, config = {}) => {\r\n    const deviceManager = editor.DeviceManager;\r\n    deviceManager.devices = [];\r\n\r\n    const addDevice = device => deviceManager.add(device.name, device.width, device.opts);\r\n    const deviceList = [\r\n        {\r\n            name: 'Extra Small',\r\n            width: '575px',\r\n            opts: {},\r\n        },\r\n        {\r\n            name: 'Small',\r\n            width: '768px',\r\n            // opts: {widthMedia: '768'},\r\n        },\r\n        {\r\n            name: 'Medium',\r\n            width: '992px',\r\n            // opts: {widthMedia: '992'},\r\n        },\r\n        {\r\n            name: 'Large',\r\n            width: '1200px',\r\n            // opts: {widthMedia: '1200'},\r\n        },\r\n        {\r\n            name: 'Extra Large',\r\n            width: '100%',\r\n            opts: {},\r\n        },\r\n    ];\r\n    deviceList.forEach(addDevice);\r\n\r\n    const commands = editor.Commands;\r\n    const addCommand = cmd => commands.add(cmd.id, cmd.command);\r\n    const deviceCommands = [\r\n            {id: 'set-device-xs', command: editor => editor.setDevice('Extra Small')},\r\n            {id: 'set-device-sm', command: editor => editor.setDevice('Small')},\r\n            {id: 'set-device-md', command: editor => editor.setDevice('Medium')},\r\n            {id: 'set-device-lg', command: editor => editor.setDevice('Large')},\r\n            {id: 'set-device-xl', command: editor => editor.setDevice('Extra Large')},\r\n        ];\r\n    deviceCommands.forEach(addCommand);\r\n\r\n    const panels = editor.Panels;\r\n    const panelDevices = panels.addPanel({\r\n        id: 'devices-buttons',\r\n        visible  : true,\r\n        buttons  : [\r\n            {\r\n                id: 'deviceXl',\r\n                command: 'set-device-xl',\r\n                className: 'fa fa-desktop',\r\n                attributes: { title: 'Extra Large' },\r\n                active: 1\r\n            },\r\n            {\r\n                id: 'deviceLg',\r\n                command: 'set-device-lg',\r\n                className: 'fa fa-desktop',\r\n                attributes: { title: 'Large' }\r\n            },\r\n            {\r\n                id: 'deviceMd',\r\n                command: 'set-device-md',\r\n                className: 'fa fa-tablet',\r\n                attributes: { title: 'Medium' }\r\n            },\r\n            {\r\n                id: 'deviceSm',\r\n                command: 'set-device-sm',\r\n                className: 'fa fa-mobile',\r\n                attributes: { title: 'Small' }\r\n            },\r\n            {\r\n                id: 'deviceXs',\r\n                command: 'set-device-xs',\r\n                className: 'fa fa-mobile',\r\n                attributes: { title: 'Extra Small' }\r\n            }\r\n        ],\r\n    });\r\n\r\n  }  \r\n\t"],"sourceRoot":""}